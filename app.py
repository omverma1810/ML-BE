from fastapi import FastAPI, HTTPException, status,File, UploadFile,Request
from pydantic import BaseModel
from passlib.context import CryptContext
from pymongo import MongoClient
from typing import Optional
from datetime import datetime, timedelta
import jwt
from PIL import Image,ImageOps 
import pickle
from io import BytesIO
import numpy as np
from pathlib import Path
from fastapi.responses import JSONResponse
from fastapi.middleware.cors import CORSMiddleware
import os
from dotenv import load_dotenv
from datetime import datetime, timedelta, timezone
app = FastAPI()
load_dotenv()

client = MongoClient(os.getenv("MONGO_URL"))
db = client['ml-models']
users_collection = db['users']

# Password hashing
pwd_context = CryptContext(schemes=["bcrypt"], deprecated="auto")

# JWT settings

ACCESS_TOKEN_EXPIRE_MINUTES = os.getenv('ACCESS_TOKEN_EXPIRE_MINUTES')
SECRET_KEY = os.getenv('SECRET_KEY')
ALGORITHM = os.getenv('ALGORITHM')

app.add_middleware(
    CORSMiddleware,
    allow_origins = ["*"],
    allow_credentials = True,
    allow_methods = ["*"],
    allow_headers = ["*"]
)

# User model for signup
class UserSignup(BaseModel):
    username:str
    phonenumber: int
    password: str
    confirm_password: str

# User model for login
class UserLogin(BaseModel):
    phonenumber: int
    password: str

def create_access_token(data: dict, expires_delta: timedelta | None = None):
    to_encode = data.copy()
    if expires_delta:
        expire = datetime.now(timezone.utc) + expires_delta
    else:
        expire = datetime.now(timezone.utc) + timedelta(minutes=15)
    to_encode.update({"exp": expire})
    encoded_jwt = jwt.encode(to_encode, SECRET_KEY, algorithm=ALGORITHM)
    return encoded_jwt


# Signup route
@app.post("/signup")
async def signup(user: UserSignup):
    if user.password != user.confirm_password:
        raise HTTPException(status_code=status.HTTP_400_BAD_REQUEST, detail="Passwords do not match")
    
    # Check if the user already exists
    existing_user = users_collection.find_one({"phonenumber": user.phonenumber})
    if existing_user:
        raise HTTPException(status_code=status.HTTP_400_BAD_REQUEST, detail="User already exists")

    # Hash the password
    hashed_password = pwd_context.hash(user.password)

    # Store the user in the database
    user_data = {"username":user.username,"phonenumber": user.phonenumber, "hashed_password": hashed_password}
    users_collection.insert_one(user_data)

    return {"message": "User created successfully"}

# Login route
@app.post("/login")
async def login(user: UserLogin):
    # Check if the user exists
    existing_user = users_collection.find_one({"phonenumber": user.phonenumber})
    if not existing_user:
        raise HTTPException(status_code=status.HTTP_401_UNAUTHORIZED, detail="Invalid credentials")

    # Verify the password
    if not pwd_context.verify(user.password, existing_user["hashed_password"]):
        raise HTTPException(status_code=status.HTTP_401_UNAUTHORIZED, detail="Invalid credentials")

    # Generate access token
    access_token = create_access_token(data={"phonenumber": user.phonenumber})
    return {"access_token": access_token, "token_type": "bearer"}
    # return "login sucess"


@app.post("/predict")
async def predict(file: UploadFile = File(...), option: str = None):
    try:
        if option not in features:
            raise HTTPException(status_code=400, detail="Invalid option")

        with open(f"pickle_files/{option}.pkl", "rb") as f:
            model = pickle.load(f)

        # Read and preprocess the X-ray image
        contents = await file.read()
        img = Image.open(BytesIO(contents))

        # Resize the image to match the model's input size
        img = img.resize((28, 28))

        # Convert the image to grayscale and invert it (if needed)
        img = ImageOps.grayscale(img)
        # img = ImageOps.invert(img)

        # Convert the image to a numpy array and flatten it
        img_array = np.array(img).flatten()

        # Map image pixels to features
        mapped_img_array = [img_array[int(feature)] for feature in features[option]]

        # Make predictions
        predictions = model.predict(np.array(mapped_img_array).reshape(1, -1))
        result_str = "Normal" if predictions[0] == 0 else "COVID-19"

        response = {"prediction": result_str}
        return JSONResponse(content=response)

    except FileNotFoundError:
        raise HTTPException(status_code=404, detail="Model file not found")

    except Exception as e:
        return JSONResponse({"error": str(e)}, status_code=500)



iterativezzXgb=['7', '12', '13', '14', '15', '19', '20', '21', '28', '29', '33', '34', '35', '36', '37', '41', '42', '47', '48', '49', '50', '54', '55', '56', '57', '61', '62', '76', '77', '78', '83', '163', '172', '191', '192', '200', '219', '220', '228', '229', '233', '234', '241', '242', '246', '247', '248', '256', '257', '261', '262', '269', '270', '271', '275', '276', '284', '285', '288', '289', '290', '298', '299', '303', '312', '316', '317', '318', '326', '327', '328', '331', '340', '343', '344', '345', '346', '347', '355', '356', '357', '359', '360', '371', '372', '373', '374', '375', '383', '384', '385', '388', '399', '400', '401', '411', '412', '413', '416', '426', '427', '428', '429', '441', '442', '444', '455', '456', '469', '470', '485', '497', '498', '518', '525', '526', '532', '533', '546', '553', '554', '560', '561', '574', '581', '582', '587', '588', '589', '595', '596', '597', '598', '599', '600', '601', '602', '603', '615', '616', '617', '622', '623', '624', '625', '626', '627', '628', '629', '630', '631', '643', '644', '645', '650', '651', '652', '653', '654', '655', '656', '657', '658', '659', '660', '661', '662', '663', '664', '671', '672', '673', '678', '679', '680', '681', '682', '683', '684', '685', '686', '687', '688', '689', '690', '691', '692', '698', '699', '700', '701', '706', '707', '708', '709', '710', '711', '712', '713', '714', '715', '716', '717', '718', '719', '720', '721', '726', '727', '728', '729', '734', '735', '736', '737', '738', '739', '740', '741', '742', '743', '744', '745', '746', '747', '748', '749', '754', '755', '756', '757', '762', '763', '764', '765', '766', '767', '768', '769', '770', '771', '772', '773', '774', '775', '776', '777', '783']

iterativeztXgb=['12', '13', '14', '15', '191', '200', '205', '206', '207', '219', '229', '233', '234', '235', '241', '242', '247', '257', '261', '262', '263', '269', '270', '275', '288', '289', '290', '298', '299', '303', '316', '317', '318', '319', '326', '327', '328', '344', '345', '346', '347', '355', '356', '36', '371', '372', '373', '374', '375', '383', '384', '399', '400', '401', '402', '403', '412', '413', '427', '428', '429', '441', '498', '518', '526', '546', '56', '560', '574', '588', '589', '595', '596', '597', '598', '600', '601', '602', '616', '617', '622', '623', '624', '625', '626', '627', '628', '629', '630', '631', '633', '644', '645', '649', '650', '651', '652', '653', '654', '655', '656', '657', '658', '659', '660', '661', '662', '663', '664', '665', '672', '673', '677', '678', '679', '680', '681', '682', '683', '684', '685', '686', '687', '688', '689', '690', '691', '692', '693', '699', '700', '701', '705', '706', '707', '708', '709', '710', '711', '712', '713', '714', '715', '716', '717', '718', '719', '720', '721', '722', '728', '729', '733', '734', '735', '736', '737', '738', '739', '740', '741', '742', '743', '744', '745', '746', '747', '748', '749', '750', '762', '763', '764', '765', '766', '767', '768', '769', '770', '771', '772', '773', '774', '775', '776']

iterativetzXgb=['11', '12', '13', '136', '137', '14', '144', '15', '16', '163', '164', '172', '173', '174', '191', '192', '193', '20', '200', '201', '206', '207', '214', '218', '219', '220', '221', '228', '229', '233', '234', '235', '241', '242', '243', '246', '247', '248', '256', '257', '261', '262', '263', '269', '270', '271', '274', '275', '285', '288', '289', '290', '298', '299', '300', '303', '316', '317', '318', '319', '326', '327', '328', '331', '34', '344', '345', '346', '347', '35', '355', '356', '359', '36', '360', '371', '372', '373', '374', '375', '383', '384', '399', '400', '401', '402', '403', '41', '411', '412', '413', '416', '42', '427', '428', '43', '441', '442', '48', '49', '490', '505', '518', '526', '532', '533', '546', '55', '56', '560', '561', '574', '588', '589', '595', '596', '597', '598', '600', '601', '602', '616', '617', '62', '622', '623', '624', '625', '626', '627', '628', '629', '630', '631', '632', '633', '634', '644', '645', '649', '650', '651', '652', '653', '654', '655', '656', '657', '658', '659', '660', '661', '662', '663', '664', '665', '666', '672', '673', '677', '678', '679', '680', '681', '682', '683', '684', '685', '686', '687', '688', '689', '690', '691', '692', '693', '694', '700', '701', '705', '706', '707', '708', '709', '710', '711', '712', '713', '714', '715', '716', '717', '718', '719', '720', '721', '722', '723', '733', '734', '735', '736', '737', '738', '739', '740', '741', '742', '743', '744', '745', '746', '747', '748', '749', '750', '751', '762', '763', '764', '765', '766', '767', '768', '769', '770', '771', '772', '773', '774', '775', '776', '777', '778', '84']

iterativettXgb=['12', '13', '14', '15', '172', '191', '20', '200', '21', '219', '228', '233', '234', '235', '242', '247', '256', '261', '262', '263', '270', '271', '289', '290', '298', '299', '316', '317', '318', '327', '344', '345', '346', '347', '35', '355', '356', '36', '372', '373', '374', '384', '400', '401', '402', '412', '413', '428', '429', '441', '457', '48', '49', '50', '518', '546', '573', '574', '595', '596', '597', '598', '600', '601', '602', '62', '622', '623', '624', '625', '626', '627', '628', '629', '630', '631', '649', '650', '651', '652', '653', '654', '655', '656', '657', '658', '659', '660', '661', '662', '663', '664', '665', '677', '678', '679', '680', '681', '682', '683', '684', '685', '686', '687', '688', '689', '690', '691', '692', '693', '694', '705', '706', '707', '708', '709', '710', '711', '712', '713', '714', '715', '716', '717', '718', '719', '720', '721', '722', '733', '734', '735', '736', '737', '738', '739', '740', '741', '742', '743', '744', '745', '746', '747', '748', '749', '750', '763', '764', '765', '766', '767', '768', '769', '770', '771', '772', '773', '774', '775', '776']

benfordsXgb=['3', '4', '5', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '50', '51', '52', '53', '58', '59', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '80', '81', '85', '86', '87', '88', '89', '90', '91', '92', '93', '94', '95', '96', '97', '98', '99', '100', '101', '102', '103', '104', '105', '106', '107', '108', '109', '110', '113', '114', '115', '116', '117', '118', '119', '120', '121', '122', '123', '124', '125', '126', '127', '128', '129', '130', '131', '132', '133', '134', '135', '136', '137', '138', '140', '141', '142', '143', '144', '145', '146', '147', '148', '149', '150', '151', '152', '153', '154', '155', '156', '157', '158', '159', '160', '161', '162', '163', '164', '165', '166', '167', '168', '169', '170', '171', '172', '173', '174', '175', '176', '177', '178', '179', '180', '181', '182', '183', '184', '185', '186', '187', '188', '189', '190', '191', '192', '193', '194', '195', '196', '197', '198', '199', '200', '201', '202', '203', '204', '205', '206', '207', '208', '209', '210', '211', '212', '213', '214', '215', '216', '217', '218', '219', '220', '221', '222', '223', '224', '225', '226', '227', '228', '229', '230', '231', '232', '233', '234', '235', '236', '237', '238', '239', '240', '241', '242', '243', '244', '245', '246', '247', '248', '249', '250', '251', '252', '253', '254', '255', '256', '257', '258', '259', '260', '261', '262', '263', '264', '265', '266', '267', '268', '269', '270', '271', '272', '273', '274', '275', '276', '277', '278', '279', '280', '281', '282', '283', '284', '285', '286', '287', '288', '289', '290', '291', '292', '293', '294', '295', '296', '297', '298', '299', '300', '301', '302', '303', '304', '305', '306', '307', '308', '309', '310', '311', '312', '313', '314', '315', '316', '317', '318', '319', '320', '321', '322', '323', '324', '325', '326', '327', '328', '329', '330', '331', '332', '333', '334', '335', '336', '337', '338', '339', '340', '341', '342', '343', '344', '345', '346', '347', '348', '349', '350', '351', '352', '353', '354', '355', '356', '357', '358', '359', '360', '361', '362', '363', '364', '365', '366', '367', '368', '369', '370', '371', '372', '373', '374', '375', '376', '377', '378', '379', '380', '381', '382', '383', '384', '385', '386', '387', '388', '389', '390', '391', '392', '393', '394', '395', '396', '397', '398', '399', '400', '401', '402', '403', '404', '405', '406', '407', '408', '409', '410', '411', '412', '413', '414', '415', '416', '417', '418', '419', '420', '421', '422', '423', '424', '425', '426', '427', '428', '429', '430', '431', '432', '433', '434', '435', '436', '437', '438', '439', '440', '441', '442', '443', '444', '445', '446', '447', '448', '449', '450', '451', '452', '453', '454', '455', '456', '457', '458', '459', '460', '461', '462', '463', '464', '465', '466', '467', '468', '469', '470', '471', '472', '473', '474', '475', '476', '477', '478', '479', '480', '481', '482', '483', '484', '485', '486', '487', '488', '489', '490', '491', '492', '493', '494', '495', '496', '497', '498', '499', '500', '501', '502', '503', '504', '505', '506', '507', '508', '509', '510', '511', '512', '513', '514', '515', '516', '517', '518', '519', '520', '521', '522', '523', '524', '525', '526', '527', '528', '529', '530', '531', '532', '533', '534', '535', '536', '537', '538', '539', '540', '541', '542', '543', '544', '545', '546', '547', '548', '549', '550', '551', '552', '553', '554', '555', '556', '557', '558', '559', '560', '561', '562', '563', '564', '565', '566', '567', '568', '569', '570', '571', '572', '573', '574', '575', '576', '577', '578', '579', '580', '581', '582', '583', '584', '585', '586', '587', '588', '589', '590', '591', '592', '593', '594', '595', '596', '597', '598', '599', '600', '601', '602', '603', '604', '605', '606', '607', '608', '609', '610', '611', '612', '613', '614', '615', '616', '617', '618', '619', '620', '621', '622', '623', '624', '625', '626', '627', '628', '629', '630', '631', '632', '633', '634', '635', '636', '637', '638', '639', '640', '641', '642', '643', '644', '645', '646', '647', '648', '649', '650', '651', '652', '653', '654', '655', '656', '657', '658', '659', '660', '661', '662', '663', '664', '665', '666', '667', '668', '669', '671', '672', '674', '675', '676', '677', '678', '679', '680', '681', '682', '683', '684', '685', '686', '687', '688', '689', '690', '691', '692', '693', '694', '695', '696', '697', '699', '700', '702', '703', '704', '705', '706', '707', '708', '709', '710', '711', '712', '713', '714', '715', '716', '717', '718', '719', '720', '721', '722', '723', '724', '725', '727', '728', '730', '731', '732', '733', '734', '735', '736', '737', '738', '739', '740', '741', '742', '743', '744', '745', '746', '747', '748', '749', '750', '751', '752', '753', '755', '756', '758', '759', '760', '761', '762', '763', '764', '765', '766', '767', '768', '769', '770', '771', '772', '773', '774', '775', '776', '777', '778', '779', '780', '781', '783']

plainttestXgb = ['524', '57', '266', '477', '558', '730', '590', '694', '385', '403', '468', '344', '15', '500', '230', '28', '516', '129', '577', '504', '146', '457', '623', '532', '256', '764', '518', '449', '123', '440', '202', '439', '473', '599', '79', '539', '126', '327', '443', '736', '734', '276', '451', '433', '201', '526', '706', '30', '438', '345', '82', '483', '765', '46', '20', '301', '66', '205', '455', '142', '244', '375', '347', '26', '236', '564', '55', '762', '549', '768', '104', '224', '745', '732', '331', '7', '779', '58', '586', '676', '292', '11', '111', '192', '21', '156', '270', '667', '219', '651', '729', '45', '324', '423', '106', '169', '64', '194', '505', '59', '657', '598', '317', '739', '335', '458', '726', '177', '150', '56', '573', '722', '752', '614', '412', '315', '751', '298', '405', '85', '686', '689', '545', '482', '674', '112', '491', '216', '627', '774', '232', '737', '421', '80', '679', '40', '373', '52', '750', '3', '521', '462', '197', '356', '371', '342', '630', '165', '708', '400', '200', '340', '36', '709', '360', '515', '213', '75', '410', '560', '378', '580', '561', '154', '746', '185', '278', '279', '401', '597', '137', '702', '181', '240', '681', '208', '749', '544', '343', '93', '313', '363', '353', '645', '520', '233', '16', '115', '459', '38', '772', '634', '113', '361', '178', '601', '31', '153', '625', '693', '635', '49', '624', '553', '720', '83', '687', '528', '307', '388', '198', '25', '217', '588', '195', '261', '27', '173', '463', '2', '735', '492', '748', '35', '714', '637', '84', '428', '631', '338', '406', '710', '662', '728', '282', '330', '654', '260', '420', '644', '643', '618', '509', '109', '426', '253', '552', '231', '696', '684', '92', '8', '314', '402', '414', '472', '475', '638', '218', '461', '692', '39', '164', '24', '306', '296', '604', '381', '14', '305', '616', '246', '453', '700', '238', '680', '51', '783', '186', '141', '642', '775', '769', '193', '262', '294', '622', '655', '554', '510', '144', '656', '721', '425', '773', '707', '530', '81', '416', '589', '308', '487', '263', '258', '54', '754', '574', '441', '151', '724', '145', '42', '22', '250', '415', '611', '399', '646', '288', '222', '277', '316', '538', '413', '484', '374', '29', '372', '37', '690', '529', '759', '12', '490', '407', '167', '595', '259', '740', '269', '496', '19', '747', '603', '488', '442', '368', '672', '199', '430', '166', '212', '671', '541', '179', '699', '105', '334', '4', '659', '695', '210', '136', '395', '733', '74', '320', '9', '661', '62', '204', '424', '776', '551', '70', '469', '242', '431', '254', '163', '34', '718', '125', '50', '63', '649', '547', '289', '359', '174', '605', '122', '432', '53', '501', '629', '383', '190', '95', '411', '124', '761', '135', '489', '701', '255', '357', '220', '18', '322', '6', '673', '542', '527', '78', '531', '664', '705', '536', '660', '257', '23', '386', '171', '0', '557', '517', '677', '281', '339', '251', '223', '290', '252', '71', '128', '744', '594', '47', '666', '352', '615', '632', '582', '572', '299', '287', '525', '152', '713', '325', '467', '187', '636', '757', '683', '362', '241', '712', '610', '581', '275', '546', '271', '214', '481', '771', '268', '398', '346', '466', '575', '493', '376', '523', '485', '60', '670', '367', '571', '583', '427', '284', '77', '716', '763', '90', '76', '229', '652', '626', '444', '234', '311', '434', '248', '760', '333', '585', '184', '770', '479', '243', '698', '249', '497', '48', '511', '68', '470', '364', '382', '326', '88', '533', '341', '384', '780', '602', '498', '691', '274', '172', '207', '665', '766', '607', '704', '44', '291', '576', '711', '741', '318', '756', '114', '32', '43', '170', '559', '476', '17', '397', '138', '1', '613', '94', '633', '743', '61', '13', '312', '329', '65', '717', '513', '777', '755', '370', '280', '89', '767', '587', '103', '562', '302', '390', '534', '663', '417', '495', '355', '116', '454', '283', '189', '606', '456', '404', '272', '409', '332', '537', '300', '41', '102', '380', '540', '196', '162', '758', '206', '448', '653', '678', '445', '486', '727', '429', '72', '221', '715', '225', '658', '555', '143', '548', '304', '215', '350', '723', '285', '650', '389', '778', '303', '688', '782', '682', '519', '685', '157', '91', '512', '435', '180', '742', '297', '247', '648', '738', '719', '191', '600', '596', '396', '226', '168', '503', '235', '309', '161', '556', '134', '5', '319', '437', '228', '514', '387', '33', '328', '264', '621', '617', '227', '464', '310', '348', '628', '69', '354', '408']

kstestsvm = ['3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '31', '32', '33', '34', '35', '36', '37', '38', '39', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '50', '51', '52', '58', '59', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '80', '81', '85', '86', '87', '88', '89', '90', '91', '92', '93', '94', '95', '96', '97', '98', '99', '100', '101', '102', '103', '104', '105', '106', '107', '108', '109', '110', '112', '113', '114', '115', '116', '117', '118', '119', '120', '121', '122', '123', '124', '125', '126', '127', '128', '129', '130', '131', '132', '133', '134', '135', '136', '137', '138', '139', '140', '141', '142', '143', '144', '145', '146', '147', '148', '149', '150', '151', '152', '153', '154', '155', '156', '157', '158', '159', '160', '161', '162', '163', '164', '165', '166', '167', '168', '169', '170', '171', '172', '173', '174', '175', '176', '177', '178', '179', '180', '181', '182', '183', '184', '185', '186', '187', '188', '189', '190', '191', '192', '193', '194', '195', '196', '197', '198', '199', '200', '201', '202', '203', '204', '205', '206', '207', '208', '209', '210', '211', '212', '213', '214', '215', '216', '217', '218', '219', '220', '221', '222', '223', '224', '225', '226', '227', '228', '229', '230', '231', '232', '233', '234', '235', '236', '237', '238', '239', '240', '241', '243', '244', '245', '246', '247', '248', '249', '250', '251', '252', '253', '254', '255', '256', '257', '258', '259', '260', '261', '262', '263', '264', '265', '266', '267', '268', '269', '271', '272', '273', '274', '275', '276', '277', '278', '279', '280', '281', '282', '283', '284', '285', '286', '287', '288', '289', '290', '291', '292', '293', '294', '295', '296', '297', '298', '299', '300', '301', '302', '303', '304', '305', '306', '307', '308', '309', '310', '311', '312', '313', '314', '315', '316', '317', '318', '319', '320', '321', '322', '323', '324', '325', '326', '327', '328', '329', '330', '331', '332', '333', '334', '335', '336', '337', '338', '339', '340', '341', '342', '343', '344', '345', '346', '347', '348', '349', '350', '351', '352', '353', '354', '355', '356', '357', '358', '359', '360', '361', '362', '363', '364', '365', '366', '367', '368', '369', '370', '371', '372', '373', '374', '375', '376', '377', '378', '379', '380', '381', '382', '383', '384', '385', '386', '387', '388', '389', '390', '391', '392', '393', '394', '395', '396', '397', '398', '399', '400', '401', '402', '403', '404', '405', '406', '407', '408', '409', '410', '411', '412', '413', '414', '415', '416', '417', '418', '419', '420', '421', '422', '423', '424', '425', '426', '427', '428', '429', '430', '431', '432', '433', '434', '435', '436', '437', '438', '439', '440', '441', '442', '443', '444', '445', '446', '447', '448', '449', '450', '451', '452', '453', '454', '455', '456', '457', '458', '459', '460', '461', '462', '463', '464', '465', '466', '467', '468', '469', '470', '471', '472', '473', '474', '475', '476', '477', '478', '479', '480', '481', '482', '483', '484', '485', '486', '487', '488', '489', '490', '491', '492', '493', '494', '495', '496', '497', '498', '499', '500', '501', '502', '503', '504', '505', '506', '507', '508', '509', '510', '511', '512', '513', '514', '515', '516', '517', '518', '519', '520', '521', '522', '523', '524', '525', '526', '527', '528', '529', '530', '531', '532', '533', '534', '535', '536', '537', '538', '539', '540', '541', '542', '543', '544', '545', '546', '547', '548', '549', '550', '551', '552', '553', '554', '555', '556', '557', '558', '559', '561', '562', '563', '564', '565', '566', '567', '568', '569', '570', '571', '572', '573', '574', '575', '576', '577', '578', '579', '580', '581', '582', '583', '584', '585', '586', '589', '590', '591', '592', '593', '594', '595', '596', '597', '598', '599', '600', '601', '602', '603', '604', '605', '606', '607', '608', '609', '610', '611', '612', '613', '614', '617', '618', '619', '620', '621', '622', '623', '624', '625', '626', '627', '628', '629', '630', '631', '632', '633', '634', '635', '636', '637', '638', '639', '640', '641', '642', '645', '646', '647', '648', '649', '650', '651', '652', '653', '654', '655', '656', '657', '658', '659', '660', '661', '662', '663', '664', '665', '666', '667', '668', '669', '670', '673', '674', '675', '676', '677', '678', '679', '680', '681', '682', '683', '684', '685', '686', '687', '688', '689', '690', '691', '692', '693', '694', '695', '696', '697', '698', '701', '702', '703', '704', '705', '706', '707', '708', '709', '710', '711', '712', '713', '714', '715', '716', '717', '718', '719', '720', '721', '722', '723', '724', '725', '726', '729', '730', '731', '732', '733', '734', '735', '736', '737', '738', '739', '740', '741', '742', '743', '744', '745', '746', '747', '748', '749', '750', '751', '752', '753', '754', '757', '758', '759', '760', '761', '762', '763', '764', '765', '766', '767', '768', '769', '770', '771', '772', '773', '774', '775', '776', '777', '778', '779', '780', '781']

ktestsvm

features = {"benfordsXgb":benfordsXgb,"plainttestXgb":plainttestXgb,"kstestsvm":kstestsvm,"ktestsvm":ktestsvm,"iterativettXgb":iterativettXgb,"iterativezzXgb":iterativezzXgb,"iterativetzXgb":iterativetzXgb,"iterativeztXgb":iterativeztXgb}

if __name__ == "__main__":
    import uvicorn
    uvicorn.run(app, port=8000)
